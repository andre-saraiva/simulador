
./bd    3,2,1,0,1 7,3,1,0,1,3 0.5,0.5,1 10 teste 1 21


pattern.v = 3
patter.k = 2
pattern.onslot=0,1

indíce       012345601234560123456
	     0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20	
primeiro     1 1 0 1 1 0 1 1 0 1  1  0  1  1  0  1  1  0  1  1  0    onslot[0 1]
segundo	     1 1 0 1 0 0 0 1 1 0  1  0  0  0  1  1  0  1  0  0  0    onslot[0,1,3]

saida
0,0
1,1
0,3
1,0
1,3
0,1


while j> mmc/v faça (j de 0 a 6)
for i=0, i<pattern.k, i++ (i de 0,1)

novo array <- (onSlot[i] + j*pattern.v)%patter2.v
                 0 + 0 %7 = 0
	        1 + 0 % 7 = 1
		0 + 1*3 %7 = 3
		1 + 1*3 %7 = 4
		0 + 2*3 %7 = 6
		1 + 2*3 %7 = 0
		...
		1+ 6*3 %7 = 5


for k=0, k < mmc/patter2.v, k++

se novo array[k] == patter2.onslot[k] achou
	0 == 0
	1 == 1
	2 == 2 nao
	3 == 3 




s1%v2 = 0%7 =0
s1+v1 % v2 = 0+3 % 7 =3
s1 + 2*v1) % v2 = 0 + 6 % 7 = 6
s1 + 3*v1) % v2 = 0 + 9 % 7 = 2
s1 + 4*v1) % v2 = 0 + 12 % 7 = 5
s1 + 5*v1) % v2 = 0 + 15 % 7 = 5
s1 + 6*v1) % v2 = 0 + 18 % 7 = 4
 até tamanho mmc/v = 7 (0 a 6)


...
s1 + v1 * 21/7) % v2 =  0 + 9 % 7 = 2

s1%v2 = 1%7 =1
s1+v1 % v2 = 1+3 % 7 =4
s1 + 2*v1) % v2 = 1 + 6 % 7 = 0
...
s1 + 6*v1) % v2 = 1 + 18 % 7 = 5




s1%v1 = 0%7 =0
s1+v2 % v1 = 0+3 % 7 =3
s1 + 2*v2) % v1 = 0 + 6 % 7 = 6
s1 + 3*v2) % v1 = 0 + 9 % 7 = 2
s1 + 4*v2) % v1 = 0 + 12 % 7 = 5
s1 + 5*v2) % v1 = 0 + 15 % 7 = 5
s1 + 6*v2) % v1 = 0 + 18 % 7 = 4
 até tamanho mmc/v = 7 (0 a 6)



pattern2.v = 7
pattern2.k = 3
pattern2.onslot=0,1,3

